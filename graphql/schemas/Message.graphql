scalar Date
scalar Base64

type Message implements Node {
  id:ID!
  content:String!
  village:Village!
  user:User
  createdAt:Date!
  updatedAt:Date
}

type MessageEdge implements Edge {
  node:Message!
  cursor:Base64!
}

type MessageConnection implements Connection {
  totalCount: Int!
  edges: [MessageEdge!]!
  nodes: [Message!]!
  pageInfo: PageInfo!
}

type Query {
  messages(
    after:Base64,
    before:Base64,
    first:Int,
    last:Int,
    query:String,
    reverse:Boolean,
    sortKey:String
  ):MessageConnection!
  message(id:ID!):Message!
}

type Mutation {
  createMessage(content:String!, villageId:String!):Message
  editMessage(id:ID!, content:String):Message
  deleteMessage(id:ID!):Message
}