scalar Date
scalar Base64

type Village implements Node {
  id:ID!
  name:String!
  description:String
  isPublic:Boolean!
  users:UserConnection!
  messages:MessageConnection!
  createdAt:Date!
  updatedAt:Date
}

type VillageEdge implements Edge {
  node:Village!
  cursor: Base64!
}

type VillageConnection implements Connection {
  totalCount: Int!
  edges: [VillageEdge!]!
  nodes: [Village!]!
  pageInfo: PageInfo!
}

type Query {
  villages(
    after:Base64,
    before:Base64,
    first:Int,
    last:Int,
    query:String,
    reverse:Boolean,
    sortKey:String
  ):VillageConnection!
  village(id:ID!):Village!
}

type Mutation {
  createVillage(name:String!, description:String, isPublic:Boolean):Village
  editVillage(villageId:ID!, name:String, description:String, isPublic:Boolean):Village
  deleteVillage(villageId:ID!):Village
  leaveVillage(villageId:ID):Village
}
